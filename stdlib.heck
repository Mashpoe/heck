import func _print_int(value: int)
import func _print_float(value: float)
import func _print_bool(value: bool)
import func _print_string(value: string)
import func _rand_float() -> float
import func _rand_range(start: float, end: float) -> float
import func input() -> string
import func parseInt(value: string) -> int
import func parseFloat(value: string) -> float
import func _concat_int_l(a: int, b: string) -> string
import func _concat_int_r(a: string, b: int) -> string
import func _concat_float_l(a: float, b: string) -> string
import func _concat_float_r(a: string, b: float) -> string
import func _concat_bool_l(a: bool, b: string) -> string
import func _concat_bool_r(a: string, b: bool) -> string
import func _concat_str(a: string, b: string) -> string
import func _str_cmp(a: string, b: string) -> bool
import func intArray(size: int) -> int[]
import func intArray2d(width: int, height: int) -> int[][]
import func floatArray(size: int) -> float[]
import func floatArray2d(width: int, height: int) -> float[][]
import func stringArray(size: int) -> string[]
import func stringArray2d(width: int, height: int) -> string[][]
import func boolArray(size: int) -> bool[]
import func boolArray2d(width: int, height: int) -> bool[][]
import func _string_len(str: string) -> int
import func _intArray_len(arr: int[]) -> int
import func _floatArray_len(arr: float[]) -> int
import func _stringArray_len(arr: string[]) -> int
import func _boolArray_len(arr: bool[]) -> int
import func _intArray2d_len(arr: int[][]) -> int
import func _floatArray2d_len(arr: float[][]) -> int
import func _stringArray2d_len(arr: string[][]) -> int
import func _boolArray2d_len(arr: bool[][]) -> int

func print(value: int) {
  _print_int(value)
}

func print(value: float) {
  _print_float(value)
}

func print(value: bool) {
  _print_bool(value)
}

func print(value: string) {
  _print_string(value)
}

func random() {
  return _rand_float()
}

func random(start: float, end: float) {
  return _rand_range(start, end)
}

func concat(a: int, b: string) {
  return _concat_int_l(a, b)
}

func concat(a: string, b: int) {
  return _concat_int_r(a, b)
}

func concat(a: float, b: string) {
  return _concat_float_l(a, b)
}

func concat(a: string, b: float) {
  return _concat_float_r(a, b)
}

func concat(a: bool, b: string) {
  return _concat_bool_l(a, b)
}

func concat(a: string, b: bool) {
  return _concat_bool_r(a, b)
}

func concat(a: string, b: string) {
  return _concat_str(a, b)
}

func len(str: string) {
  return _string_len(str)
}

func len(arr: int[]) {
  return _intArray_len(arr)
}

func len(arr: float[]) {
  return _floatArray_len(arr)
}

func len(arr: string[]) {
  return _stringArray_len(arr)
}

func len(arr: bool[]) {
  return _boolArray_len(arr)
}

func len(arr: int[][]) {
  return _intArray2d_len(arr)
}

func len(arr: float[][]) {
  return _floatArray2d_len(arr)
}

func len(arr: string[][]) {
  return _stringArray2d_len(arr)
}

func len(arr: bool[][]) {
  return _boolArray2d_len(arr)
}